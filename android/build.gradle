// SPDX-FileCopyrightText: 2021-2023 The Manyverse Authors
//
// SPDX-License-Identifier: Unlicense

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "30.0.2"
        minSdkVersion = 21
        targetSdkVersion = 26
        targetSdkVersionForGooglePlay = 31
        compileSdkVersion = 30
        ndkVersion = "24.0.8215888"
        kotlinVersion = "1.5.31"
        RNNKotlinVersion = kotlinVersion
        RNNKotlinStdlib = "kotlin-stdlib-jdk8"
    }
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        all { ArtifactRepository repo ->
            if (repo instanceof MavenArtifactRepository) {
                def url = repo.url.toString()
                if (url.startsWith('https://jcenter.bintray.com/')) {
                    project.logger.lifecycle "Repository ${repo.url} dropped"
                    remove repo
                }
            }
        }
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven {
            url 'https://maven.google.com'
        }
        maven {
            url "https://www.jitpack.io"
        }
        google()
    }
}

File propsFile = project.file('local.properties')
if (propsFile.exists()) {
    propsFile.withReader('UTF-8') { reader ->
        Properties props = new Properties()
        props.load(reader)
        props.forEach { key, value ->
            project.properties.put(key.toString(), value.toString())
        }
    }
}